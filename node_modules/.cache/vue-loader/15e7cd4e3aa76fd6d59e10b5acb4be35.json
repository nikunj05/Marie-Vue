{"remainingRequest":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\Marie-Vue\\src\\components\\CarDetails\\CarDetails.vue?vue&type=template&id=f89a0562&scoped=true&","dependencies":[{"path":"C:\\xampp\\htdocs\\Marie-Vue\\src\\components\\CarDetails\\CarDetails.vue","mtime":1593245182775},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}