{"remainingRequest":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\Marie-Vue\\src\\store\\modules\\modelsapi.js","dependencies":[{"path":"C:\\xampp\\htdocs\\Marie-Vue\\src\\store\\modules\\modelsapi.js","mtime":1593156346000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Marie-Vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXHhhbXBwXFxodGRvY3NcXE1hcmllLVZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCAqIGFzIEFQSSBmcm9tICcuL3Nlc3Npb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgLy9HbG9iYWwgU3RhdGUKICBzdGF0ZTogewogICAgc2Vzc2lvbjogbnVsbCwKICAgIG1vZGVsczogW10sCiAgICBzaXRlczogW10sCiAgICB0b3RhbERheXM6ICcnLAogICAgU2VsZWN0Rm9ybToge30KICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlU2Vzc2lvbjogZnVuY3Rpb24gdXBkYXRlU2Vzc2lvbihzdGF0ZSwgdmFsdWUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNlc3Npb24gPSB2YWx1ZTsKICAgIH0sCiAgICB1cGRhdGVNb2RlbHM6IGZ1bmN0aW9uIHVwZGF0ZU1vZGVscyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgcmV0dXJuIHN0YXRlLm1vZGVscyA9IHZhbHVlOwogICAgfSwKICAgIHVwZGF0ZVNpdGVzOiBmdW5jdGlvbiB1cGRhdGVTaXRlcyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNpdGVzID0gdmFsdWU7CiAgICB9LAogICAgdXBkYXRlVG90YWxEYXlzOiBmdW5jdGlvbiB1cGRhdGVUb3RhbERheXMoc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLnRvdGFsRGF5cyA9IHZhbHVlOwogICAgfSwKICAgIHVwZGF0ZVNlbGVjdEZvcm06IGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdEZvcm0oc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLlNlbGVjdEZvcm0gPSB2YWx1ZTsKICAgICAgc3RhdGUuU2VsZWN0Rm9ybS50b3RhbERheXMgPSBzdGF0ZS50b3RhbERheXM7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlLlNlbGVjdEZvcm0udG90YWxEYXlzKTsKICAgICAgY29uc29sZS5sb2codmFsdWUpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy91cGRhdGluZyB0b3RhbERheXMgaW4gZ2xvYmFsIHN0YXRlIGluIHZ1ZXgKICAgIGNoZWNrVG90YWxEYXlzOiBmdW5jdGlvbiBjaGVja1RvdGFsRGF5cyhfcmVmLCB0b3RhbERheXMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgY29tbWl0KCJ1cGRhdGVUb3RhbERheXMiLCB0b3RhbERheXMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy9yZWZyZXNoIGV4cGlyZWQgdG9rZW4gLCB0aW1lb3V0CiAgICBjaGVja1Nlc3Npb246IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9jaGVja1Nlc3Npb24gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYyKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIHNlc3Npb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKCiAgICAgICAgICAgICAgICBpZiAoISghc3RhdGUuc2Vzc2lvbiB8fCAhc3RhdGUuc2Vzc2lvbi50aW1lb3V0IHx8IG5ldyBEYXRlKCkgPiBuZXcgRGF0ZShzdGF0ZS5zZXNzaW9uLnRpbWVvdXQpKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBBUEkuZ2V0U2Vzc2lvbigpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBzZXNzaW9uID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZVNlc3Npb24nLCBzZXNzaW9uKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY2hlY2tTZXNzaW9uKF94KSB7CiAgICAgICAgcmV0dXJuIF9jaGVja1Nlc3Npb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNoZWNrU2Vzc2lvbjsKICAgIH0oKSwKICAgIC8vcGFzcyB0b2tlbiB0byBoZWFkZXJzIGFuZCBjYWxsIC9ib29raW5nL21vZGVscwogICAgc3RhcnRTZXNzaW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc3RhcnRTZXNzaW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmMykgewogICAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBzdGF0ZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjMuY29tbWl0LCBzdGF0ZSA9IF9yZWYzLnN0YXRlOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdjaGVja1Nlc3Npb24nKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdGUuc2Vzc2lvbik7IC8vIGFwaSBjYWxsIGhlcmUKCiAgICAgICAgICAgICAgICBheGlvcy5nZXQoIi9ib29raW5nL21vZGVscyIsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdYLUFQSS1Ub2tlbic6IHN0YXRlLnNlc3Npb24udG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIHZhciBtb2RlbHMgPSByZXMuZGF0YS5tb2RlbHM7CiAgICAgICAgICAgICAgICAgIHZhciBzaXRlcyA9IHJlcy5kYXRhLnNpdGVzOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5zaXRlcyk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlTW9kZWxzJywgbW9kZWxzKTsKICAgICAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVTaXRlcycsIHNpdGVzKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cobW9kZWxzKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yICcgKyBlcnIpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvb29wcycpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDhdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHN0YXJ0U2Vzc2lvbihfeDIpIHsKICAgICAgICByZXR1cm4gX3N0YXJ0U2Vzc2lvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc3RhcnRTZXNzaW9uOwogICAgfSgpLAogICAgLy91cGRhdGluZyBTZWxlY3RGb3JtIGluIHZ1ZXggc3RvcmUgc3RhdGUKICAgIHNlbmRTZWxlY3RGb3JtOiBmdW5jdGlvbiBzZW5kU2VsZWN0Rm9ybShfcmVmNCwgU2VsZWN0Rm9ybSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgICBjb21taXQoInVwZGF0ZVNlbGVjdEZvcm0iLCBTZWxlY3RGb3JtKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRTZXNzaW9uOiBmdW5jdGlvbiBnZXRTZXNzaW9uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zZXNzaW9uOwogICAgfSwKICAgIGdldE1vZGVsczogZnVuY3Rpb24gZ2V0TW9kZWxzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5tb2RlbHM7CiAgICB9LAogICAgZ2V0U2l0ZXM6IGZ1bmN0aW9uIGdldFNpdGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zaXRlczsKICAgIH0sCiAgICBnZXRUb3RhbERheXM6IGZ1bmN0aW9uIGdldFRvdGFsRGF5cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudG90YWxEYXlzOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfTs="},{"version":3,"sources":["C:/xampp/htdocs/Marie-Vue/src/store/modules/modelsapi.js"],"names":["axios","API","state","session","models","sites","totalDays","SelectForm","mutations","updateSession","value","updateModels","updateSites","updateTotalDays","updateSelectForm","console","log","actions","checkTotalDays","commit","checkSession","timeout","Date","getSession","startSession","dispatch","get","headers","token","then","res","data","catch","err","sendSelectForm","getters","getModels","getSites","getTotalDays","modules"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as API from './session';\n\nexport default {\n  //Global State\n    state: {\n        session: null,\n        models: [],\n        sites: [],\n        totalDays: '',\n        SelectForm: {},\n\n      },\n      mutations: {\n        updateSession: (state, value) => state.session = value,\n        updateModels: (state, value) => state.models = value,\n        updateSites: (state, value) => state.sites = value,\n        updateTotalDays: (state,value) => {\n          state.totalDays=value\n        },\n        updateSelectForm: (state, value) =>{state.SelectForm = value \n          state.SelectForm.totalDays=state.totalDays\n          console.log(state.SelectForm.totalDays)\n          console.log(value)} \n      },\n      actions: {\n        //updating totalDays in global state in vuex\n        async checkTotalDays({ commit }, totalDays) {\n         commit(\"updateTotalDays\", totalDays);\n        },\n          //refresh expired token , timeout\n        checkSession: async ({ commit, state }) => {\n          if (!state.session || !state.session.timeout || new Date() > new Date(state.session.timeout)) {\n            const session = await API.getSession();\n            commit('updateSession', session);\n          }\n        },\n\n        //pass token to headers and call /booking/models\n        startSession: async ({ dispatch, commit, state }) => {\n          try {\n            await dispatch('checkSession');\n            console.log(state.session);\n\n            // api call here\n            axios.get( `/booking/models`, { headers: \n                {\n                'X-API-Token': state.session.token, \n                }\n            })\n             .then(res => {\n                 const models = res.data.models\n                 const sites =res.data.sites\n                 console.log(res.data.sites)\n                 commit('updateModels', models)\n                 commit('updateSites', sites )\n               console.log(res)\n               console.log(models)\n             })\n             .catch((err) => {\n              console.log('error ' + err);\n            });\n          } catch (e) {\n            console.log('ooops');\n          }\n        },\n       \n        //updating SelectForm in vuex store state\n        async sendSelectForm({ commit }, SelectForm) {\n          commit(\"updateSelectForm\", SelectForm);\n         },\n      },\n      getters: {\n        getSession: state => state.session,\n        getModels: state => state.models,\n        getSites: state => state.sites,\n        getTotalDays: state => state.totalDays\n      },\n      modules: {\n      }\n}"]}]}